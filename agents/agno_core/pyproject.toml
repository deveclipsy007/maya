[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agno-core"
version = "0.1.0"
description = "Core interfaces and orchestrator for Agno WhatsApp Agent System"
authors = [
    {name = "Agno Team", email = "dev@agno.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pydantic>=1.9.0,<2.0.0",
    "typing-extensions>=4.0.0",
    "asyncio-mqtt>=0.11.0",
    "python-dotenv>=0.19.0",
    "structlog>=22.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

[project.entry-points."agno_agents"]
# Entry points serão registrados pelos agentes específicos

[tool.setuptools.packages.find]
where = ["."]
include = ["agno_core*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=agno_core --cov-report=html --cov-report=term-missing"
