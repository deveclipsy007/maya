"""
üéµ MAYA + WHATSAPP - Vers√£o Simplificada
Integra√ß√£o direta da Maya com WhatsApp (sem depend√™ncias extras)
"""
import sys
import os
from pathlib import Path
import logging
from flask import Flask, request, jsonify
from datetime import datetime

# Adicionar caminho do projeto principal
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

# Importar m√≥dulos WhatsApp
from core import WhatsAppClient

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class MayaWhatsAppSimple:
    """
    Integra√ß√£o simplificada Maya + WhatsApp
    """
    
    def __init__(self):
        self.whatsapp_client = WhatsAppClient()
        self.maya_instance = None
        self.user_sessions = {}
        
        # Tentar importar Maya
        try:
            from maya_optimized import get_maya
            self.maya_instance = get_maya()
            logger.info("‚úÖ Maya carregada com sucesso!")
        except Exception as e:
            logger.error(f"‚ùå Erro ao carregar Maya: {e}")
            self.maya_instance = None
    
    def process_message(self, sender_number: str, message_text: str) -> bool:
        """
        Processa mensagem com Maya
        """
        try:
            logger.info(f"üéµ Processando mensagem de {sender_number}: {message_text}")
            
            if not self.maya_instance:
                # Fallback se Maya n√£o carregou
                fallback_response = "üéµ Ol√°! Sou a Maya da HopeCann. No momento estou com problemas t√©cnicos, mas em breve estarei funcionando perfeitamente para te ajudar com agendamento de consultas!"
                return self.whatsapp_client.send_message(sender_number, fallback_response)
            
            # Processar com Maya
            maya_response = self.maya_instance.run(message_text)
            
            if maya_response and maya_response.content:
                # Enviar resposta
                success = self.whatsapp_client.send_message(sender_number, maya_response.content)
                
                if success:
                    logger.info(f"‚úÖ Resposta Maya enviada para {sender_number}")
                    
                    # Verificar √°udio (se dispon√≠vel)
                    if hasattr(maya_response, 'response_audio') and maya_response.response_audio:
                        logger.info(f"üéµ √Åudio gerado ({len(maya_response.response_audio.content)} bytes)")
                        # Por enquanto apenas loga, futuramente pode enviar √°udio
                    
                    return True
                else:
                    logger.error("‚ùå Falha ao enviar resposta")
                    return False
            else:
                logger.warning("‚ö†Ô∏è Maya n√£o gerou resposta")
                return False
                
        except Exception as e:
            logger.error(f"üí• Erro ao processar mensagem: {e}")
            
            # Enviar mensagem de erro amig√°vel
            error_msg = "üéµ Desculpe, tive um probleminha. Pode repetir sua mensagem?"
            self.whatsapp_client.send_message(sender_number, error_msg)
            return False
    
    def test_maya(self, message: str) -> dict:
        """
        Testa Maya diretamente
        """
        try:
            if not self.maya_instance:
                return {
                    "status": "error",
                    "message": "Maya n√£o est√° carregada"
                }
            
            response = self.maya_instance.run(message)
            
            return {
                "status": "success",
                "input": message,
                "maya_response": response.content if response else "Sem resposta",
                "has_audio": bool(hasattr(response, 'response_audio') and response.response_audio),
                "timestamp": datetime.now().isoformat()
            }
            
        except Exception as e:
            return {
                "status": "error",
                "message": str(e)
            }

# ============================================
# APLICA√á√ÉO FLASK
# ============================================

app = Flask(__name__)
maya_bridge = MayaWhatsAppSimple()

@app.route("/webhook", methods=["POST"])
def webhook():
    """
    Webhook para receber mensagens WhatsApp
    """
    try:
        webhook_data = request.json
        logger.info("üì® Webhook recebido")
        
        if not webhook_data or "data" not in webhook_data:
            return jsonify({"status": "no_data"})
        
        # Processar cada mensagem
        processed = False
        for item in webhook_data["data"]:
            if "message" in item and item["message"]:
                message_data = item["message"]
                
                # Ignorar mensagens do pr√≥prio bot
                if message_data.get("fromMe", False):
                    continue
                
                # Extrair dados
                sender_number = item.get("key", {}).get("remoteJid", "").replace("@s.whatsapp.net", "")
                message_text = (
                    message_data.get("conversation") or
                    message_data.get("extendedTextMessage", {}).get("text") or
                    ""
                ).strip()
                
                if sender_number and message_text:
                    logger.info(f"üì® Mensagem de {sender_number}: {message_text}")
                    maya_bridge.process_message(sender_number, message_text)
                    processed = True
        
        return jsonify({
            "status": "success" if processed else "no_messages",
            "processed_by": "maya"
        })
        
    except Exception as e:
        logger.error(f"üí• Erro no webhook: {e}")
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/send", methods=["POST"])
def send_message():
    """
    Envio manual via Maya
    """
    try:
        data = request.json
        number = data.get("number")
        message = data.get("message")
        
        if not number or not message:
            return jsonify({"error": "Campos 'number' e 'message' obrigat√≥rios"}), 400
        
        # Processar com Maya
        success = maya_bridge.process_message(number, message)
        
        if success:
            return jsonify({
                "status": "success",
                "message": "Mensagem processada pela Maya",
                "to": number
            })
        else:
            return jsonify({
                "status": "error",
                "message": "Falha no processamento"
            }), 500
            
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/maya/test", methods=["POST"])
def test_maya():
    """
    Teste direto da Maya
    """
    try:
        data = request.json
        message = data.get("message", "Ol√° Maya!")
        
        result = maya_bridge.test_maya(message)
        return jsonify(result)
        
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/status", methods=["GET"])
def status():
    """
    Status da integra√ß√£o
    """
    try:
        whatsapp_connected = maya_bridge.whatsapp_client.is_connected()
        maya_loaded = maya_bridge.maya_instance is not None
        
        return jsonify({
            "status": "online",
            "maya": {
                "loaded": maya_loaded,
                "status": "ativa" if maya_loaded else "erro",
                "name": "Maya HopeCann"
            },
            "whatsapp": {
                "connected": whatsapp_connected,
                "instance": maya_bridge.whatsapp_client.instance
            },
            "integration": "maya + whatsapp",
            "timestamp": datetime.now().isoformat()
        })
        
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/", methods=["GET"])
def home():
    """
    Informa√ß√µes da API
    """
    return jsonify({
        "name": "üéµ Maya + WhatsApp (Simplificada)",
        "version": "1.0.0",
        "description": "Maya HopeCann integrada com WhatsApp",
        "features": [
            "Agendamento de consultas",
            "Respostas inteligentes",
            "Integra√ß√£o WhatsApp"
        ],
        "endpoints": {
            "webhook": "/webhook (POST) - Recebe mensagens",
            "send": "/send (POST) - Envia via Maya",
            "maya_test": "/maya/test (POST) - Testa Maya",
            "status": "/status (GET) - Status"
        },
        "como_testar": {
            "1": "POST /maya/test com {'message': 'Quero consulta'}",
            "2": "POST /send com {'number': '5511999999999', 'message': 'Ol√°'}",
            "3": "Envie mensagem no WhatsApp"
        }
    })

def setup_webhook():
    """
    Configura webhook
    """
    import requests
    
    whatsapp_client = maya_bridge.whatsapp_client
    
    endpoint = f"{whatsapp_client.api_url}/webhook/set/{whatsapp_client.instance}"
    payload = {
        "url": "http://localhost:5000/webhook",
        "webhook_by_events": False,
        "webhook_base64": False,
        "events": ["MESSAGES_UPSERT"]
    }
    headers = {
        "Content-Type": "application/json",
        "apikey": whatsapp_client.api_key
    }
    
    try:
        response = requests.post(endpoint, json=payload, headers=headers)
        if response.status_code in [200, 201]:
            logger.info("‚úÖ Webhook configurado!")
        else:
            logger.warning(f"‚ö†Ô∏è Problema webhook: {response.text}")
    except Exception as e:
        logger.error(f"‚ùå Erro webhook: {e}")

if __name__ == "__main__":
    print("üéµ MAYA + WHATSAPP (SIMPLIFICADA)")
    print("=" * 50)
    
    # Verificar se Maya carregou
    if maya_bridge.maya_instance:
        print("‚úÖ Maya carregada com sucesso!")
    else:
        print("‚ö†Ô∏è Maya n√£o carregou - usando fallback")
        print("üí° Instale depend√™ncias: pip install agno")
    
    print("üì± Configurando WhatsApp...")
    setup_webhook()
    
    print("üåê API: http://localhost:5000")
    print("=" * 50)
    print("‚úÖ INTEGRA√á√ÉO PRONTA!")
    print("üìã Para testar:")
    print("   1. python test_maya.py")
    print("   2. Envie mensagem no WhatsApp")
    print("=" * 50)
    
    # Iniciar servidor
    app.run(host="0.0.0.0", port=5000, debug=False)