"""
üéµ MAYA + WHATSAPP - Demo Funcional
Vers√£o de demonstra√ß√£o que funciona garantidamente
"""
import sys
import os
from pathlib import Path
import logging
from flask import Flask, request, jsonify
from datetime import datetime
import requests

# Configurar logging
logging.basicConfig(level=logging.INFO, format='[%(asctime)s] %(levelname)s: %(message)s')
logger = logging.getLogger(__name__)

# Configura√ß√µes WhatsApp (do .env)
EVOLUTION_API_URL = "http://localhost:8090"
INSTANCE_NAME = "agente_bot"
API_KEY = "1234"

class MayaDemoBot:
    """
    Bot demo da Maya para WhatsApp
    """
    
    def __init__(self):
        self.message_count = 0
        logger.info("üéµ Maya Demo Bot inicializada")
    
    def generate_maya_response(self, message: str, user_number: str) -> str:
        """
        Gera resposta no estilo Maya (vers√£o demo)
        """
        self.message_count += 1
        message_lower = message.lower()
        
        # Respostas espec√≠ficas da Maya
        if any(word in message_lower for word in ["oi", "ol√°", "ola", "hey"]):
            return f"üéµ Ol√°! Eu sou a Maya da HopeCann! üåø\n\nSou especialista em Cannabis Medicinal e estou aqui para te ajudar a agendar sua consulta m√©dica.\n\nVoc√™ gostaria de saber mais sobre nossos servi√ßos?"
        
        elif any(word in message_lower for word in ["consulta", "agendar", "agendamento"]):
            return f"üéØ Perfeito! Vou te ajudar a agendar sua consulta! üìÖ\n\nPara come√ßar, preciso de algumas informa√ß√µes:\n\n1Ô∏è‚É£ Qual seu nome completo?\n2Ô∏è‚É£ Qual condi√ß√£o m√©dica voc√™ gostaria de tratar?\n\nEstamos aqui para te ajudar no processo legal de obten√ß√£o do CBD! üåø"
        
        elif any(word in message_lower for word in ["nome", "chamo", "sou"]):
            return f"üìù √ìtimo! Prazer em conhecer voc√™! üòä\n\nAgora me conta: qual condi√ß√£o m√©dica voc√™ gostaria de tratar com Cannabis Medicinal?\n\nTratamos casos de:\n‚Ä¢ Ansiedade e Depress√£o\n‚Ä¢ Dores Cr√¥nicas\n‚Ä¢ Ins√¥nia\n‚Ä¢ Epilepsia\n‚Ä¢ E outras condi√ß√µes\n\nQual √© o seu caso?"
        
        elif any(word in message_lower for word in ["ansiedade", "depress√£o", "dor", "ins√¥nia", "epilepsia"]):
            return f"üåø Entendo perfeitamente! Temos excelentes resultados no tratamento dessas condi√ß√µes.\n\nNossos m√©dicos especialistas podem te ajudar com:\n‚úÖ Avalia√ß√£o m√©dica completa\n‚úÖ Prescri√ß√£o personalizada\n‚úÖ Acompanhamento cont√≠nuo\n\nGostaria de agendar uma consulta? Temos hor√°rios dispon√≠veis esta semana! üìÖ"
        
        elif any(word in message_lower for word in ["pre√ßo", "valor", "quanto", "custa"]):
            return f"üí∞ Nossos valores s√£o super acess√≠veis!\n\nüìã Consulta m√©dica: R$ 200,00\nüåø Inclui avalia√ß√£o completa e prescri√ß√£o\nüì± Acompanhamento via WhatsApp\n\nQuer agendar? Posso verificar os hor√°rios dispon√≠veis para voc√™! üìÖ"
        
        elif any(word in message_lower for word in ["hor√°rio", "dispon√≠vel", "quando"]):
            return f"üìÖ Temos hor√°rios dispon√≠veis!\n\nüóìÔ∏è Esta semana:\n‚Ä¢ Ter√ßa: 14h, 16h\n‚Ä¢ Quarta: 10h, 15h\n‚Ä¢ Quinta: 9h, 14h, 17h\n‚Ä¢ Sexta: 11h, 16h\n\nQual hor√°rio funciona melhor para voc√™? üïê"
        
        elif any(word in message_lower for word in ["obrigado", "obrigada", "valeu", "thanks"]):
            return f"ü§ù De nada! Fico muito feliz em ajudar!\n\nLembre-se: estou aqui sempre que precisar de informa√ß√µes sobre Cannabis Medicinal.\n\nJ√° pensou em agendar sua consulta? √â o primeiro passo para seu tratamento! üåø‚ú®"
        
        else:
            return f"üéµ Recebi sua mensagem: '{message}'\n\nSou a Maya da HopeCann e estou aqui para te ajudar com agendamento de consultas m√©dicas para Cannabis Medicinal! üåø\n\nComo posso te ajudar hoje?\n‚Ä¢ Agendar consulta üìÖ\n‚Ä¢ Informa√ß√µes sobre tratamento üåø\n‚Ä¢ Valores e hor√°rios üí∞"

def send_whatsapp_message(number: str, message: str) -> bool:
    """
    Envia mensagem via Evolution API
    """
    try:
        endpoint = f"{EVOLUTION_API_URL}/message/sendText/{INSTANCE_NAME}"
        payload = {
            "number": number,
            "textMessage": {
                "text": message
            }
        }
        headers = {
            "Content-Type": "application/json",
            "apikey": API_KEY
        }
        
        response = requests.post(endpoint, json=payload, headers=headers)
        
        if response.status_code in [200, 201]:
            logger.info(f"‚úÖ Mensagem enviada para {number}")
            return True
        else:
            logger.error(f"‚ùå Erro ao enviar: {response.text}")
            return False
            
    except Exception as e:
        logger.error(f"üí• Erro no envio: {e}")
        return False

# ============================================
# APLICA√á√ÉO FLASK
# ============================================

app = Flask(__name__)
maya_bot = MayaDemoBot()

@app.route("/", methods=["GET"])
def home():
    """P√°gina inicial"""
    return jsonify({
        "name": "üéµ Maya Demo Bot",
        "status": "funcionando",
        "message_count": maya_bot.message_count,
        "endpoints": {
            "webhook": "/webhook (POST)",
            "send": "/send (POST)",
            "test": "/test (POST)",
            "status": "/status (GET)"
        }
    })

@app.route("/webhook", methods=["POST"])
def webhook():
    """Webhook para receber mensagens"""
    try:
        data = request.json
        logger.info(f"üì® Webhook recebido: {data}")
        
        if not data or "data" not in data:
            logger.warning("‚ö†Ô∏è Webhook sem dados")
            return jsonify({"status": "no_data"})
        
        processed = 0
        
        # Processar cada mensagem
        for item in data["data"]:
            if "message" in item and item["message"]:
                message_data = item["message"]
                
                # Ignorar mensagens do pr√≥prio bot
                if message_data.get("fromMe", False):
                    logger.info("ü§ñ Ignorando mensagem pr√≥pria")
                    continue
                
                # Extrair dados
                sender_jid = item.get("key", {}).get("remoteJid", "")
                sender_number = sender_jid.replace("@s.whatsapp.net", "")
                
                message_text = (
                    message_data.get("conversation") or
                    message_data.get("extendedTextMessage", {}).get("text") or
                    ""
                ).strip()
                
                if sender_number and message_text:
                    logger.info(f"üì® Mensagem de {sender_number}: {message_text}")
                    
                    # Gerar resposta Maya
                    maya_response = maya_bot.generate_maya_response(message_text, sender_number)
                    logger.info(f"üéµ Maya resposta: {maya_response[:50]}...")
                    
                    # Enviar resposta
                    if send_whatsapp_message(sender_number, maya_response):
                        logger.info(f"‚úÖ Resposta enviada para {sender_number}")
                        processed += 1
                    else:
                        logger.error(f"‚ùå Falha ao enviar para {sender_number}")
        
        return jsonify({
            "status": "success",
            "processed": processed,
            "total_messages": maya_bot.message_count
        })
        
    except Exception as e:
        logger.error(f"üí• Erro no webhook: {e}")
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/send", methods=["POST"])
def send_message():
    """Envio manual"""
    try:
        data = request.json
        number = data.get("number")
        message = data.get("message")
        
        if not number or not message:
            return jsonify({"error": "Precisa de 'number' e 'message'"}), 400
        
        # Gerar resposta Maya
        maya_response = maya_bot.generate_maya_response(message, number)
        
        # Enviar
        if send_whatsapp_message(number, maya_response):
            return jsonify({
                "status": "success",
                "to": number,
                "original": message,
                "maya_response": maya_response
            })
        else:
            return jsonify({"status": "error", "message": "Falha no envio"}), 500
            
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/test", methods=["POST"])
def test():
    """Teste da Maya"""
    try:
        data = request.json or {}
        message = data.get("message", "Ol√° Maya!")
        
        response = maya_bot.generate_maya_response(message, "test_user")
        
        return jsonify({
            "status": "success",
            "input": message,
            "maya_response": response,
            "message_count": maya_bot.message_count
        })
        
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route("/status", methods=["GET"])
def status():
    """Status do sistema"""
    return jsonify({
        "status": "online",
        "maya_bot": "ativa",
        "message_count": maya_bot.message_count,
        "whatsapp_config": {
            "api_url": EVOLUTION_API_URL,
            "instance": INSTANCE_NAME
        },
        "timestamp": datetime.now().isoformat()
    })

def setup_webhook():
    """Configura webhook"""
    try:
        endpoint = f"{EVOLUTION_API_URL}/webhook/set/{INSTANCE_NAME}"
        payload = {
            "url": "http://localhost:5000/webhook",
            "webhook_by_events": False,
            "webhook_base64": False,
            "events": ["MESSAGES_UPSERT"]
        }
        headers = {
            "Content-Type": "application/json",
            "apikey": API_KEY
        }
        
        response = requests.post(endpoint, json=payload, headers=headers)
        
        if response.status_code in [200, 201]:
            logger.info("‚úÖ Webhook configurado!")
            return True
        else:
            logger.warning(f"‚ö†Ô∏è Problema webhook: {response.text}")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå Erro webhook: {e}")
        return False

if __name__ == "__main__":
    print("üéµ MAYA DEMO BOT + WHATSAPP")
    print("=" * 50)
    print("ü§ñ Maya Demo: Inicializando...")
    
    # Configurar webhook
    print("üì± Configurando webhook...")
    setup_webhook()
    
    print("üåê Servidor: http://localhost:5000")
    print("=" * 50)
    print("‚úÖ MAYA DEMO PRONTA!")
    print("üìã Para testar:")
    print("   1. Envie mensagem no WhatsApp")
    print("   2. Acesse http://localhost:5000")
    print("   3. POST /test para testar")
    print("=" * 50)
    
    # Iniciar servidor
    app.run(host="0.0.0.0", port=5000, debug=True)